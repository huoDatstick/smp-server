##########################################################
#
#           服务器配置
#
##########################################################
server.port=8761
spring.application.name=es
logging.level.top=debug
##########################################################
#
#           eureka配置
#
##########################################################
eureka.client.serviceUrl.defaultZone=http://itning:${server.port}/eureka/
eureka.instance.hostname=itning
#禁止注册中心注册自己
eureka.client.register-with-eureka=false
#表示是否从Eureka Server获取注册信息，默认为true
#如果这是一个单点的 Eureka Server，不需要同步其他节点的数据，可以设为false
eureka.client.fetch-registry=false
#eureka client刷新本地缓存时间,默认30s
eureka.client.registryFetchIntervalSeconds=5
#不开启自我保护(生产环境开启)
eureka.server.enable-self-preservation=false
#清理无效节点的时间间隔
eureka.server.eviction-interval-timer-in-ms=3000
#eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
eureka.server.response-cache-update-interval-ms=3000
#服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
eureka.instance.lease-expiration-duration-in-seconds=15
#服务刷新时间配置，每隔这个时间会主动心跳一次
eureka.instance.lease-renewal-interval-in-seconds=5